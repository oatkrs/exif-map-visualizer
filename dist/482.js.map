{"version":3,"file":"482.js","mappings":"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","names":["FS","require","PATH","module","exports","path","options","onEachFile","onEachDirectory","name","basename","item","normalizePath","replace","stats","lstat","statSync","lstatSync","exclude","regExp","constructor","RegExp","isRegExp","some","exclusion","test","isSymbolicLink","followSymlinks","symlinks","find","ino","push","isFile","ext","extname","toLowerCase","extensions","size","extension","type","attributes","forEach","attribute","isDirectory","dirData","readdirSync","ex","code","safeReadDirSync","children","map","child","directoryTree","join","filter","e","reduce","prev","cur","y","H","w","a","f","n","o","r","Promise","i","proxyMarker","Symbol","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","ep","target","createProxy","wrap","value","serialized","Error","isError","message","stack","Object","assign","self","addEventListener","ev","data","id","argumentList","fromWireValue","returnValue","parent","slice","prop","rawValue","apply","proxy","transfers","transferCache","set","transfer","undefined","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","callback","closeEndPoint","endpoint","isMessagePort","close","isReleased","isProxyReleased","Proxy","get","_target","throwIfProxyReleased","requestResponseMessage","p","toString","length","bind","_thisArg","rawArgumentList","last","processArguments","construct","arr","Array","prototype","concat","processed","v","myFlat","WeakMap","handler","serializedValue","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","generateUUID","l","dirTreeObject","flattenedDirTree","flattenDirectoryTree","srcDirTreeArray","dstDirTreeArray","element","createDirectoryTree","selectedDirPath","option","k","convertToFlattenedDirTree"],"sourceRoot":"webpack:///","sources":["./node_modules/directory-tree/lib/directory-tree.js","external node-commonjs \"fs\"","external node-commonjs \"path\"","webpack/bootstrap","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","./node_modules/comlink/dist/esm/comlink.mjs","./src-shared/dir-tree/dir-tree-util.ts","./src/app/shared/worker/directory-tree.worker.ts"],"sourcesContent":["'use strict';\n\nconst FS = require('fs');\nconst PATH = require('path');\nconst constants = {\n  DIRECTORY: 'directory',\n  FILE: 'file'\n}\n\nfunction safeReadDirSync (path) {\n  let dirData = {};\n  try {\n    dirData = FS.readdirSync(path);\n  } catch(ex) {\n    if (ex.code == \"EACCES\" || ex.code == \"EPERM\") {\n      //User does not have permissions, ignore directory\n      return null;\n    }\n    else throw ex;\n  }\n  return dirData;\n}\n\n/**\n * Normalizes windows style paths by replacing double backslahes with single forward slahes (unix style).\n * @param  {string} path\n * @return {string}\n */\nfunction normalizePath(path) {\n  return path.replace(/\\\\/g, '/');\n}\n\n/**\n * Tests if the supplied parameter is of type RegExp\n * @param  {any}  regExp\n * @return {Boolean}\n */\nfunction isRegExp(regExp) {\n  return typeof regExp === \"object\" && regExp.constructor == RegExp;\n}\n\n/**\n * Collects the files and folders for a directory path into an Object, subject\n * to the options supplied, and invoking optional\n * @param  {String} path\n * @param  {Object} options\n * @param  {function} onEachFile\n * @param  {function} onEachDirectory\n * @return {Object}\n */\nfunction directoryTree (path, options, onEachFile, onEachDirectory) {\n  const name = PATH.basename(path);\n  options = options || {};\n  path = options.normalizePath ? normalizePath(path) : path;\n  const item = { path, name };\n  let stats;\n  let lstat;\n\n  try {\n    stats = FS.statSync(path);\n    lstat = FS.lstatSync(path);\n  }\n  catch (e) { return null }\n\n  // Skip if it matches the exclude regex\n  if (options.exclude) {\n    const excludes =  isRegExp(options.exclude) ? [options.exclude] : options.exclude;\n    if (excludes.some((exclusion) => exclusion.test(path))) {\n      return null;\n    }\n  }\n\n  if (lstat.isSymbolicLink()) {\n    item.isSymbolicLink = true;\n    // Skip if symbolic links should not be followed\n    if (options.followSymlinks === false)\n      return null;\n    // Initialize the symbolic links array to avoid infinite loops\n    if (!options.symlinks)\n      options = { ...options, symlinks: [] };\n    // Skip if a cyclic symbolic link has been found\n    if (options.symlinks.find(ino => ino === lstat.ino)) {\n      return null; \n    } else {\n      options.symlinks.push(lstat.ino);\n    }\n  }\n\n  if (stats.isFile()) {\n\n    const ext = PATH.extname(path).toLowerCase();\n\n    // Skip if it does not match the extension regex\n    if (options.extensions && !options.extensions.test(ext))\n      return null;\n\n    item.size = stats.size;  // File size in bytes\n    item.extension = ext;\n    item.type = constants.FILE;\n\n    if (options.attributes) {\n      options.attributes.forEach((attribute) => {\n        item[attribute] = stats[attribute];\n      });\n    }\n\n    if (onEachFile) {\n      onEachFile(item, path, stats);\n    }\n  }\n  else if (stats.isDirectory()) {\n    let dirData = safeReadDirSync(path);\n    if (dirData === null) return null;\n\n    if (options.attributes) {\n      options.attributes.forEach((attribute) => {\n        item[attribute] = stats[attribute];\n      });\n    }\n    item.children = dirData\n      .map(child => directoryTree(PATH.join(path, child), options, onEachFile, onEachDirectory))\n      .filter(e => !!e);\n    item.size = item.children.reduce((prev, cur) => prev + cur.size, 0);\n    item.type = constants.DIRECTORY;\n    if (onEachDirectory) {\n      onEachDirectory(item, path, stats);\n    }\n  } else {\n    return null; // Or set item.size = 0 for devices, FIFO and sockets ?\n  }\n  return item;\n}\n\nmodule.exports = directoryTree;\n","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case \"GET\" /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case \"SET\" /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case \"APPLY\" /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case \"CONSTRUCT\" /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case \"ENDPOINT\" /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case \"RELEASE\" /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === \"RELEASE\" /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: \"RELEASE\" /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: \"GET\" /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: \"SET\" /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: \"ENDPOINT\" /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"APPLY\" /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"CONSTRUCT\" /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: \"HANDLER\" /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: \"RAW\" /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case \"HANDLER\" /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case \"RAW\" /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n","import { DirectoryTree } from 'directory-tree';\n\nexport function convertToFlattenedDirTree(dirTreeObject: DirectoryTree): DirectoryTree[] {\n  const flattenedDirTree: DirectoryTree[] = [];\n  flattenDirectoryTree([dirTreeObject], flattenedDirTree);\n  return flattenedDirTree;\n}\n\nfunction flattenDirectoryTree(srcDirTreeArray: DirectoryTree[], dstDirTreeArray: DirectoryTree[]): DirectoryTree[] {\n  srcDirTreeArray.forEach((element: DirectoryTree) => {\n    dstDirTreeArray.push(element);\n    if (element?.children) {\n      flattenDirectoryTree(element.children, dstDirTreeArray);\n    }\n  });\n  return dstDirTreeArray;\n}\n","import { expose } from 'comlink';\nimport * as createDirectoryTree from 'directory-tree';\nimport { DirectoryTree } from 'directory-tree';\nimport { convertToFlattenedDirTree } from '../../../../src-shared/dir-tree/dir-tree-util';\n\nexport const api = {\n  async createDirectoryTree(selectedDirPath: string, option?: createDirectoryTree.DirectoryTreeOptions) {\n    return createDirectoryTree(selectedDirPath, option);\n  },\n  async convertToFlattenedDirTree(directoryTree: DirectoryTree) {\n    return convertToFlattenedDirTree(directoryTree);\n  }\n};\n\nexpose(api);\n"]}